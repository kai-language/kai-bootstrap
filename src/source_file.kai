#import "lexer.kai" lex
#import "alloc.kai"
#import "ast.kai"

#import "libc.kai"

SourceFile :: struct {
    arena: alloc.Arena
    fullpath: string
    lines: u64
}

SourceFileInit :: fn(file: *SourceFile, path: string) -> bool {
    lexer: lex.Lexer
    ok := lex.LexerInit(&lexer, path)
    if !ok
        return false
    for true {
        tok := lex.NextToken(&lexer)
        libc.printf("token: \x1b[35m%s\x1b[0m, lit: \x1b[34m\"".raw, lex.Describe(tok).raw)
        for char in tok.str {
            libc.printf("%c".raw, char)
        }
        libc.printf("\"\x1b[0m\n".raw)

        if tok.kind == lex.TokenKind.Invalid || tok.kind == lex.TokenKind.Eof
            break
    }

    file.fullpath = path
    file.lines = 0
    alloc.ArenaInit(&file.arena, sizeof(ast.AstNode) * lexer.data.len)

    return true
}
